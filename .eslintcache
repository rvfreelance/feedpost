[{"C:\\Users\\envoq\\Desktop\\postfeed\\src\\index.js":"1","C:\\Users\\envoq\\Desktop\\postfeed\\src\\App.js":"2","C:\\Users\\envoq\\Desktop\\postfeed\\src\\reportWebVitals.js":"3","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Header\\Header.js":"4","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Posts\\Posts.js":"5","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Create\\Create.js":"6","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Login\\Login.js":"7","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Modal\\Modal.js":"8","C:\\Users\\envoq\\Desktop\\postfeed\\src\\firebase\\firebase.js":"9","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\WindowDimension\\WindowDimension.js":"10","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Loading\\Loading.js":"11","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\ErrorBoundary\\ErrorBoundary.js":"12","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\SearchBar\\SearchBar.js":"13","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Posts\\Heart.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":11824,"mtime":1609928815012,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1728,"mtime":1609901889237,"results":"19","hashOfConfig":"16"},{"size":11639,"mtime":1609904012027,"results":"20","hashOfConfig":"16"},{"size":8137,"mtime":1609874165100,"results":"21","hashOfConfig":"16"},{"size":11745,"mtime":1609785026350,"results":"22","hashOfConfig":"16"},{"size":361,"mtime":1608536177654,"results":"23","hashOfConfig":"16"},{"size":781,"mtime":1609780157223,"results":"24","hashOfConfig":"16"},{"size":560,"mtime":1605778686317,"results":"25","hashOfConfig":"16"},{"size":350,"mtime":1609427143448,"results":"26","hashOfConfig":"16"},{"size":3256,"mtime":1609901678723,"results":"27","hashOfConfig":"16"},{"size":3011,"mtime":1609676547234,"results":"28","hashOfConfig":"16"},{"size":993,"mtime":1609929428960,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"dy4vtg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\envoq\\Desktop\\postfeed\\src\\index.js",[],["60","61"],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\App.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\reportWebVitals.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Header\\Header.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Posts\\Posts.js",["62"],"import React, { useState } from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport WorldPost from '../../assets/svg/world_post.svg';\r\nimport Loading from '../Loading/Loading';\r\nimport { storage } from '../../firebase/firebase';\r\n// import Heart from '../../assets/svg/heart.svg';\r\nimport Heart from './Heart';\r\n\r\nimport './Posts.scss';\r\n\r\n\r\nconst Posts =(props) =>{\r\n    const { posts, noShow, loginStatus, setFilteredPosts, filteredPosts, searchValue, setSearchValue } = props;\r\n    // const [love, setLove] = useState([]);\r\n    const [lovedPosts, setLovedPosts] = useState([]);\r\n    const renderPosts = () =>{\r\n        if(searchValue.length){\r\n            return filteredPosts;\r\n        }else{\r\n            return posts;\r\n        }\r\n    }\r\n\r\n    const LovedPosts =(id, status) =>{\r\n        if(status){\r\n            setLovedPosts(...lovedPosts, id);\r\n        }else{\r\n            const filter = lovedPosts.filter(item=>{\r\n                return( item!==id)\r\n            })\r\n            setLovedPosts(filter);\r\n        }\r\n    };  \r\n    \r\n    // LovedPosts= love.forEach(obj=>{\r\n    //     return obj.postId\r\n    // })\r\n\r\n    // console.log('LovedPosts: ', LovedPosts)\r\n    const provideLoveStatus =(id) =>{\r\n        if(lovedPosts.length){\r\n            const filter = lovedPosts.filter(item=>{\r\n                return(item!== id)\r\n            })\r\n            console.log('provideLoveStatus filter: ', filter);\r\n            return id===filter[0];\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    //Give <img/> their image url for the respective posts\r\n    // const feedImageUrl =(feedId, link) =>{\r\n    //     console.log(feedId, link);\r\n    //     storage.refFromURL(link)\r\n    //         .getDownloadURL()\r\n    //         .then(url=>{\r\n    //             console.log('feedId: ', feedId, ', link: ', link, ', URL: ', url);\r\n    //             return url;\r\n    //         })\r\n    //         .catch(error=>console.log(error))\r\n    // } \r\n\r\n    // const handleLove =(postId, now) =>{\r\n    //     if(now){\r\n    //         setLove(...love, { 'postId': postId, 'loveState': now})\r\n    //     }else{\r\n    //         const filter = love.filter(obj=>{\r\n    //             return( obj.postId!== postId )\r\n    //         });\r\n    //         setLove(filter);\r\n    //     }\r\n    // }\r\n    \r\n\r\n    // const replaceUrl =() =>{\r\n        // let img = document.getElementById('138TbZThBVAhEY2WDpwT');\r\n        // img.src = 'https://firebasestorage.googleapis.com/v0/b/feeds-db.appspotâ€¦hop.jpg?alt=media&token=224e9865-0964-42de-ac63-06231639ed0c';\r\n    // }\r\n\r\n    return(\r\n        <div className={`posts ${props.width<=800? 'pb-90':''}`}>\r\n            {\r\n                loginStatus? \r\n                    <SearchBar \r\n                        width={props.width} \r\n                        posts={posts} \r\n                        setFilteredPosts={setFilteredPosts}\r\n                        searchValue={searchValue}\r\n                        setSearchValue={setSearchValue}    \r\n                    /> \r\n                    : \r\n                    null\r\n            }\r\n\r\n            {\r\n                searchValue.length ?\r\n                \r\n                    filteredPosts.length?\r\n                    <span>Showing results for <strong><em>{searchValue}</em></strong></span>\r\n                    :\r\n                    <span>No results to show for <strong><em>{searchValue}</em></strong></span>\r\n                    \r\n                    :\r\n                    null\r\n                }\r\n\r\n            {\r\n                posts.length? \r\n                (\r\n                    renderPosts().map(post=>{\r\n                        return(\r\n                            <div key={post.fId} className={`${post.fImgLink? 'x-post-large':'x-post-small'} x-post`}>\r\n                                <span className='x-post-timestamp'>{post.fUpdated}</span>\r\n                                <div className='x-post-info'>\r\n                                    <div className='x-post-writer'>\r\n                                        <span style={{textTransform:'capitalize'}}>{post.feederName}</span>\r\n                                    </div>\r\n                                    <div className={post.fLink? 'x-post-button-div': 'hidden'}>\r\n                                        <button className='x-post-button pointer click-animation'\r\n                                            onClick={()=> window.open(post.fLink, '_blank')}\r\n                                        >\r\n                                            Post\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='x-post-desc'>\r\n                                    <p className='x-post-title'>{post.fTitle}</p>\r\n                                    <div className='x-post-brief'>\r\n                                        <span>{post.fBrief}</span>\r\n                                    </div>\r\n                                    {/* <hr/> */}\r\n                                </div>\r\n                                {/* experimentalcss looks good */}\r\n                                {/* <span style={{fontSize:'0.8rem'}}>{post.fBrief}</span> */}\r\n                                <hr style={{width:'80%', color:'rgba(235, 235, 235, 0.5)'}} \r\n                                    className={post.fImgLink? '':'hidden'}/>\r\n                                {\r\n                                    post.fImgLink ? \r\n                                    <div className={post.fImgLink? 'x-post-image-vign':'hidden'}>\r\n                                            {/* <img id={post.fId} src={feedImageUrl(post.fId, post.fImgLink)} alt=''/> */}\r\n                                            <img id={post.fId} src={post.fImgLink} width='100%' alt=''/>\r\n                                            {/* <img id={post.fId} src=\"https://firebasestorage.googleapis.com/v0/b/feeds-db.appspotâ€¦hop.jpg?alt=media&token=224e9865-0964-42de-ac63-06231639ed0c\" alt=''/> */}\r\n                                        </div>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                {/* Done experimental css */}\r\n                                <div className='x-bottom'>\r\n                                    <div className='x-like'>\r\n                                        {/* <span>it</span> */}\r\n                                        <Heart love={provideLoveStatus(post.fId)} handleLove={LovedPosts} postId={post.fId}/>\r\n                                        {/* <img className='pointer click-animation' src={Heart} width='20px' alt='like the post'/> */}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                \r\n                                {\r\n                                    post.fLink ?\r\n                                    (\r\n                                        <div className={`x-top ${post.fIsAuthor? 'x-post-author-div':''}`}>\r\n                                            <span>{post.fIsAuthor? 'Author':'Shared Post'}</span>\r\n                                        </div>\r\n                                    )\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                            // <div key={post.fId} className={`${post.fImgLink? 'post-large':'post-small'} post`}>\r\n                            //     <div className='post-info'>\r\n                            //         <div className='post-writer'>\r\n                            //             <span style={{textTransform:'capitalize'}}>{post.feederName}</span>\r\n                            //             <div className={post.fLink? '': 'hidden'}>\r\n                            //                 <button className='post-button pointer click-animation'\r\n                            //                     onClick={()=> window.open(post.fLink, '_blank')}\r\n                            //                 >\r\n                            //                     Post\r\n                            //                 </button>\r\n                            //             </div>\r\n                            //         </div>\r\n                            //         <span className='post-timestamp'>{post.fUpdated}</span>\r\n                            //     </div>\r\n                            //     <p>{post.fTitle}\r\n                            //         {/* <hr/> */}\r\n                            //     </p>\r\n                            //     {/* <span style={{fontSize:'0.8rem'}}>{post.fBrief}</span> */}\r\n                            //     <hr style={{width:'80%', color:'rgba(235, 235, 235, 0.5)'}} \r\n                            //         className={post.fImgLink? '':'hidden'}/>\r\n                            //     {\r\n                            //         post.fImgLink ? \r\n                            //             <div className={post.fImgLink? 'post-image':'hidden'}>\r\n                            //                 {/* <img id={post.fId} src={feedImageUrl(post.fId, post.fImgLink)} alt=''/> */}\r\n                            //                 <img id={post.fId} src={post.fImgLink} width='100%' alt=''/>\r\n                            //                 {/* <img id={post.fId} src=\"https://firebasestorage.googleapis.com/v0/b/feeds-db.appspotâ€¦hop.jpg?alt=media&token=224e9865-0964-42de-ac63-06231639ed0c\" alt=''/> */}\r\n                            //             </div>\r\n                            //         :\r\n                            //         null\r\n                            //     }\r\n                            // </div>\r\n                        )\r\n                    })\r\n                )\r\n                :\r\n                noShow || !props.loginStatus? \r\n                (\r\n                    <div style={{\r\n                            width:'80%', \r\n                            height:'80vh', \r\n                            display:'flex', \r\n                            alignItems:'center', \r\n                            justifyContent: props.width>1000? 'space-between': 'center'\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <span style={{fontSize:'2rem'}}>Let the world see what you post!</span>\r\n                            <br/><br/><br/>\r\n                            <button className='post-button' \r\n                                style={{fontSize:'2.5rem', boxShadow:'0px 0px 15px white'}}\r\n                                onClick={()=>{\r\n                                    if(props.loginStatus){\r\n                                        props.setAddFeed(true)\r\n                                    }else{\r\n                                        props.setLoginPop(true);\r\n                                        // props.setAddFeed(true);      \r\n                                    }\r\n                                }}\r\n                            >\r\n                                Add Post\r\n                            </button>\r\n                        </div>\r\n                        <img className={props.width>1000? '':'hidden'} \r\n                            src={WorldPost} \r\n                            width={props.width>1200? '500px': '350px'} \r\n                            alt=''\r\n                        />\r\n                    </div>\r\n                ) \r\n                :\r\n                <Loading />\r\n            }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Create\\Create.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Login\\Login.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Modal\\Modal.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\firebase\\firebase.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\WindowDimension\\WindowDimension.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Loading\\Loading.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\ErrorBoundary\\ErrorBoundary.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\SearchBar\\SearchBar.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Posts\\Heart.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":17},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]