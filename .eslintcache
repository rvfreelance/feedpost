[{"C:\\Users\\envoq\\Desktop\\postfeed\\src\\index.js":"1","C:\\Users\\envoq\\Desktop\\postfeed\\src\\App.js":"2","C:\\Users\\envoq\\Desktop\\postfeed\\src\\reportWebVitals.js":"3","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Header\\Header.js":"4","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Posts\\Posts.js":"5","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Create\\Create.js":"6","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Login\\Login.js":"7","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Modal\\Modal.js":"8","C:\\Users\\envoq\\Desktop\\postfeed\\src\\firebase\\firebase.js":"9","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\WindowDimension\\WindowDimension.js":"10","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Loading\\Loading.js":"11","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\ErrorBoundary\\ErrorBoundary.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":4441,"mtime":1609521205478,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":3993,"mtime":1609521297185,"results":"17","hashOfConfig":"14"},{"size":3751,"mtime":1609440524971,"results":"18","hashOfConfig":"14"},{"size":7438,"mtime":1609298003898,"results":"19","hashOfConfig":"14"},{"size":11489,"mtime":1609553721216,"results":"20","hashOfConfig":"14"},{"size":361,"mtime":1608536177654,"results":"21","hashOfConfig":"14"},{"size":709,"mtime":1608746511057,"results":"22","hashOfConfig":"14"},{"size":560,"mtime":1605778686317,"results":"23","hashOfConfig":"14"},{"size":350,"mtime":1609427143448,"results":"24","hashOfConfig":"14"},{"size":2196,"mtime":1609523119333,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dy4vtg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\envoq\\Desktop\\postfeed\\src\\index.js",[],["52","53"],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\App.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\reportWebVitals.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Header\\Header.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Posts\\Posts.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Create\\Create.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Login\\Login.js",["54","55"],"import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport { auth, firestore, firestoreTimestamp } from '../../firebase/firebase';\r\n\r\nimport './Login.scss';\r\n\r\n// const Login =(props) =>{\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            invalidEmailPassword: false,\r\n            email:'',\r\n            password:'',\r\n            register: false,\r\n            name: '',\r\n            uid: null,\r\n        }\r\n    }\r\n    // const [incorrect, setIncorrect] = useState(false);\r\n    // const [email, setEmail] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n    // const [register, setRegister] = useState(false);\r\n    // const [name, setName] = useState('');\r\n    // const [uid, setUid] = useState(null);\r\n\r\n    \r\n\r\n    handleSignIn =() =>{ \r\n        const { email, password } = this.state; \r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(data=>{\r\n                this.setState({uid: data.user.uid}, ()=>{\r\n                    firestore.doc(`/feeders/${this.state.uid}`).get()\r\n                        .then(doc=>{ \r\n                            this.setState({name: doc.data().name}, ()=>{\r\n                                this.props.setName(doc.data().name);\r\n                                this.props.setUid(doc.data().uid);\r\n                                this.props.setLoginStatus(true);\r\n                                this.props.fetchPosts();\r\n                                this.props.setLoginPop(false);\r\n                            }) \r\n                        })\r\n                    \r\n                });\r\n                // setPassword('');\r\n                // console.log(data.user.uid);\r\n            })\r\n            .catch((error)=>{\r\n                if(error.code === 'auth/wrong-password' || error.code === 'auth/user-not-found'){\r\n                    // console.log(error.code);\r\n                    this.setState({ invalidEmailPassword: true })\r\n                }else if(error.code === 'auth/too-many-requests'){\r\n                    alert(\"Your account has been temporarily disabled, try again after some time!\")\r\n                }else if(error.code === 'auth/network-request-failed'){\r\n                    alert(\"Network connectivity issue. Kindly check your internet connection.\")\r\n                }\r\n                // console.log(error)\r\n            })\r\n    }\r\n\r\n    handleRegister =() =>{\r\n        const { email, password, name } = this.state;\r\n        auth.createUserWithEmailAndPassword(email, password).then((data)=>{\r\n            // console.log(data.user.uid);\r\n            firestore.collection('/feeders').doc(data.user.uid).set({\r\n                name: name,\r\n                joined: firestoreTimestamp,\r\n                uid: data.user.uid,\r\n                org: null\r\n            }).then(()=>{\r\n                // console.log(\"feeder registration successfull!\");\r\n                this.setState({ email: '', password: ''}, ()=>{\r\n                    this.props.setName(name);\r\n                    this.props.setUid(data.user.uid);\r\n                    this.props.setLoginStatus(true);\r\n                    this.props.fetchPosts();  \r\n                    this.props.setLoginPop(false);\r\n                })              \r\n            })\r\n        }).catch(error=>{\r\n            console.log(error)\r\n            if(error.code === 'auth/network-request-failed'){\r\n                alert(\"Network connectivity issue. Kindly check your internet connection.\")\r\n            }else if(error.code === 'auth/email-already-in-use'){\r\n                alert(\"We are finding it difficult to register new users at the moment, kindly try again after some time\");\r\n            }\r\n            // console.log('Something went wrong.');\r\n            // let errorCode = error.code;\r\n            // let errorMsg = error.message;\r\n\r\n            // console.log(\"Error: \", errorCode, \": \", errorMsg);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { email, password, name, register, invalidEmailPassword } = this.state;\r\n    \r\n        const inputStyling ={\r\n            padding:'10px 20px',\r\n            margin: '20px 10px',\r\n            fontSize:'1rem',\r\n            border:'none',\r\n            outline:'none',\r\n            borderBottom: '1px solid grey'\r\n        }\r\n    \r\n        const formStyling ={\r\n            display:'grid', \r\n            gridTemplateRows:'repeat(1fr)', \r\n            width:'300px', \r\n            height:'90%', \r\n            backgroundColor:'white', \r\n            border:'2px solid grey', \r\n            alignSelf:'center', \r\n            borderRadius:'25px'\r\n        }\r\n\r\n        throw 'error';\r\n        return(\r\n            <Modal setVisibility={this.props.setLoginPop}>\r\n                <div style={{height:'100%', display:'flex', justifyContent:'center'}}>\r\n                    \r\n                    {/* Login Form */}\r\n                    <form \r\n                        onSubmit={(e)=>{e.preventDefault()}}\r\n                        id='login-modal'\r\n                        className={register? 'slide-left':'slide-right'}\r\n                        style={formStyling}\r\n                    >\r\n                        <span className='login-card-title'>Login</span>\r\n                        \r\n                        <div style={{display:'flex', flexDirection:'column'}}>\r\n                            <div style={{height:'20px'}}>\r\n                                <span className={invalidEmailPassword? '':'hidden'} style={{fontSize:'0.8rem', fontWeight:'600', color:'orangered'}}>Incorrect email or password</span>\r\n                            </div>\r\n                            <input \r\n                                style={inputStyling}\r\n                                type='email'\r\n                                placeholder='Email'\r\n                                value={email}\r\n                                onChange={(e)=>{this.setState({ email: e.target.value, invalidEmailPassword: false})}}\r\n                                />\r\n                            <input \r\n                                style={inputStyling}\r\n                                type='password'\r\n                                value={password}\r\n                                placeholder='Password'\r\n                                onChange={(e)=>{this.setState({ password: e.target.value, invalidEmailPassword: false})}}\r\n                            />\r\n                        </div>\r\n                        <div style={{\r\n                            // backgroundColor:'pink',\r\n                            display:'flex', \r\n                            flexDirection:'column', \r\n                            justifyContent:'space-between', \r\n                            alignItems:'center',\r\n                            paddingBottom:'10px'\r\n                            }}\r\n                        >\r\n                            <button \r\n                                type='submit'\r\n                                className='post-button login-button pointer' \r\n                                // style={{marginBottom:'50px'}}\r\n                                disabled={email.length && password.length ? false:true}\r\n                                onClick={()=>this.handleSignIn()}\r\n                                >\r\n                                    Login\r\n                            </button>\r\n                            <span style={{fontSize:'0.8rem'}}>Not registered yet?&nbsp;\r\n                                <span style={{\r\n                                    // textDecoration:'underline', \r\n                                    color:'rgb(106, 106, 248)', \r\n                                    cursor:'pointer'}}\r\n                                    onClick={()=>this.setState({register: true})}\r\n                                    >\r\n                                    Register\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                    \r\n                    {/* Register Form*/}\r\n                    <form onSubmit={(e)=>e.preventDefault()} className={register? 'slide-in': 'slide-out'} style={formStyling}>\r\n                    \r\n                        <span className='login-card-title'>Register</span>\r\n                        \r\n                        <div style={{display:'flex', flexDirection:'column'}}>\r\n                            {/* <div style={{height:'20px'}}>\r\n                                <span className={incorrect? '':'hidden'} style={{fontSize:'0.8rem', fontWeight:'600', color:'orangered'}}>Incorrect email or password</span>\r\n                            </div> */}\r\n                            <input \r\n                                style={inputStyling}\r\n                                type='text'\r\n                                placeholder='Name'\r\n                                value={name}\r\n                                onChange={(e)=>this.setState({name: e.target.value})}\r\n                            />\r\n                            <input \r\n                                style={inputStyling}\r\n                                type='email'\r\n                                placeholder='Email'\r\n                                value={email}\r\n                                onChange={(e)=>this.setState({email: e.target.value})}\r\n                                />\r\n                            <input \r\n                                style={inputStyling}\r\n                                type='password'\r\n                                value={password}\r\n                                minLength='6'\r\n                                placeholder='Password'\r\n                                onChange={(e)=>this.setState({password: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div style={{\r\n                            // backgroundColor:'pink',\r\n                            borderRadius:'25px',\r\n                            display:'flex', \r\n                            flexDirection:'column', \r\n                            justifyContent:'space-between', \r\n                            alignItems:'center',\r\n                            paddingBottom:'10px'\r\n                            }}\r\n                        >\r\n                            <button \r\n                                type='submit'\r\n                                className='post-button login-button pointer'\r\n                                disabled={email.length && password.length>=6 && name.length? false:true}\r\n                                onClick={()=>this.handleRegister()}\r\n                                >\r\n                                    Register now\r\n                            </button>\r\n                            <span style={{fontSize:'0.8rem'}}>Already registered?&nbsp;\r\n                                <span style={{\r\n                                    // textDecoration:'underline', \r\n                                    color:'rgb(106, 106, 248)', \r\n                                    cursor:'pointer'}}\r\n                                    onClick={()=>this.setState({register: false})}\r\n                                    >\r\n                                    Login\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Modal\\Modal.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\firebase\\firebase.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\WindowDimension\\WindowDimension.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\Loading\\Loading.js",[],"C:\\Users\\envoq\\Desktop\\postfeed\\src\\component\\ErrorBoundary\\ErrorBoundary.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":122,"column":9,"nodeType":"62","messageId":"63","endLine":122,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":123,"column":9,"nodeType":"66","messageId":"67","endLine":250,"endColumn":10},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation"]